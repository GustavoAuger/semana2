version: '3.8'

services:
  # Servicio Consul para Service Discovery
  consul:
    image: consul:1.15
    container_name: consul
    ports:
      - "8500:8500"
    volumes:
      - consul_data:/consul/data
    command: agent -server -bootstrap -ui -client=0.0.0.0
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.consul.rule=Host(`consul.localhost`)"
      - "traefik.http.routers.consul.entrypoints=web"
      - "traefik.http.services.consul.loadbalancer.server.port=8500"

  # Base de datos para el servicio de ofertas
  db_oferta:
    image: postgres:15-alpine
    container_name: db_oferta
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ofertas_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_oferta:/var/lib/postgresql/data
      - ./oferta-service/scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql # Carga de datos dummy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Base de datos para el servicio de especificaciones
  db_especificacion:
    image: postgres:15-alpine
    container_name: db_especificacion
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: especificaciones_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_especificacion:/var/lib/postgresql/data
      - ./especificacion-service/scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql # Carga de datos dummy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Servicio de ofertas
  oferta-service:
    build:
      context: ./oferta-service
      dockerfile: Dockerfile
    container_name: oferta-service
    depends_on:
      db_oferta:
        condition: service_healthy
    environment:
      - DB_HOST=db_oferta
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ofertas_db
      - CONSUL_HTTP_ADDR=consul:8500
      - SERVICE_NAME=oferta-service
      - SERVICE_PORT=8082
    networks:
      - app-network
    ports:
 #     - "8082:8082"  # Direct access for debugging
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oferta.rule=PathPrefix(`/api/v1/ofertas`)"
      - "traefik.http.routers.oferta.priority=100"
      - "traefik.http.services.oferta.loadbalancer.server.port=8082"
      - "traefik.http.routers.oferta.entrypoints=web"
      - "traefik.http.routers.oferta.service=oferta"

  # Servicio de especificaciones
  especificacion-service:
    build:
      context: ./especificacion-service
      dockerfile: Dockerfile
    container_name: especificacion-service
    depends_on:
      db_especificacion:
        condition: service_healthy
    environment:
      - DB_HOST=db_especificacion
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=especificaciones_db
      - CONSUL_HTTP_ADDR=consul:8500
      - SERVICE_NAME=especificacion-service
      - SERVICE_PORT=8081
    networks:
      - app-network
    ports:
 #     - "8081:8081"  # Direct access for debugging
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.especificacion.rule=PathPrefix(`/api/v1/especificaciones`)"
      - "traefik.http.routers.especificacion.priority=100"
      - "traefik.http.services.especificacion.loadbalancer.server.port=8081"
      - "traefik.http.routers.especificacion.entrypoints=web"
      - "traefik.http.routers.especificacion.service=especificacion"

  # API Gateway con Traefik
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      # Configuración de proveedores
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=app-network"
      - "--providers.docker.swarmMode=false"
      - "--providers.file.filename=/etc/traefik/dynamic_conf.yml"
      - "--providers.file.watch=true"
      
      # Configuración de puntos de entrada
      - "--entrypoints.web.address=:80"
      - "--entrypoints.traefik.address=:8080"
      
      # Configuración de la API y dashboard
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--api.debug=true"
      
      # Configuración de logs
      - "--log.level=DEBUG"
      - "--accesslog=true"
      
      # Configuración de la API REST
      - "--api.rest.insecure=true"
      
      # Configuración de paginación
      - "--api.rest.pagination.itemsPerPage=100"
      - "--api.rest.pagination.defaultItemsPerPage=50"
      
      # Configuración del dashboard
      - "--dashboard=true"
      - "--dashboard.auth.basic.users=admin:$$2y$$05$$X6x5Yz5J5n5Z5Y5Z5Y5Z5O5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./dynamic_conf.yml:/etc/traefik/dynamic_conf.yml:ro
    networks:
      - app-network
    labels:
      # Dashboard
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=traefik"
      - "traefik.http.routers.dashboard.middlewares=admin-auth"
      - "traefik.http.middlewares.admin-auth.basica.users=admin:$$2y$$05$$X6x5Yz5J5n5Z5Y5Z5Y5Z5O5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e"
      
      # Configuración de CORS para la API
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowMethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowHeaders=*"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowOrigin=*"
      - "traefik.http.middlewares.cors-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.cors-headers.headers.addVaryHeader=true"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data_oferta:
  postgres_data_especificacion:
  consul_data:
